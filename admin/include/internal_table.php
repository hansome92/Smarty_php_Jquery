<?php
/*
***********************************************************************************
DaDaBIK (DaDaBIK is a DataBase Interfaces Kreator) http://www.dadabik.org/
Copyright (C) 2001-2012  Eugenio Tacchini

This program is distributed "as is" and WITHOUT ANY WARRANTY, either expressed or implied, without even the implied warranties of merchantability or fitness for a particular purpose.

This program is distributed under the terms of the DaDaBIK license, which is included in this package (see dadabik_license.txt). At a glance, you can use this program and you can modifiy it to create a database application for you or for other people but you cannot redistribute the program files in any format. All the details, including examples, in dadabik_license.txt.

If you are unsure about what you are allowed to do with this license, feel free to contact eugenio.tacchini@gmail.com
***********************************************************************************
*/
?>
<?php
$ar_index = 0;

$int_fields_ar[$ar_index][0] = "Name of the field:";
$int_fields_ar[$ar_index][1] = "name_field";

$ar_index++;
$int_fields_ar[$ar_index][0] = "Label:";
$int_fields_ar[$ar_index][1] = "label_field";
$int_fields_ar[$ar_index][2] = "text";
$int_fields_ar[$ar_index][3] = "50";
$int_fields_ar[$ar_index][4] = "The text that DaDaBIK will display in the interface as label of the field.";
$int_fields_ar[$ar_index][5] = "General settings";

$ar_index++;
$int_fields_ar[$ar_index][0] = "Field type:";
$int_fields_ar[$ar_index][1] = "type_field";
$int_fields_ar[$ar_index][2] = "select_custom";
//$int_fields_ar[$ar_index][3] = "text/textarea/password/insert_date/update_date/date/select_single/select_multiple_menu/select_multiple_checkbox/generic_file/image_file/ID_user/unique_ID";
$int_fields_ar[$ar_index][3] = "Text fields~text/textarea/rich_editor/Date and time fields~date/date_time/insert_date/update_date/List fields~select_single/File fields~generic_file/image_file/Other~ID_user/unique_ID";
$int_fields_ar[$ar_index][4] = "<ul><li><b>text:</b> a text box</li>
    <li><b>textarea:</b> a textarea box</li>
    <li><b>rich_editor:</b> a rich text editor that allows to easily insert/modify HTML content. THIS COULD LEAD TO SECURITY PROBLEMS. READ THE DOCUMENTATION BEFORE USING!</li>
    <li><b>insert_date:</b> the current date will be automatically inserted into this field when you insert a new record in your table; an insert_date field must be excluded from the insert form, see below (Field present in the insert form?). Note that the corresponding database field type must be date</li>
    <li><b>update_date:</b> the current date will be automatically inserted into this field when you update a record in your table; an update_date field must be excluded from the insert and edit form, see below (Field present in the insert/edit form?). Note that the corresponding database field type must be date</li>
    <li><b>date:</b> three dropdown menu: day, month, year. Note that the corresponding database field type must be date</li>
    <li><b>date_time:</b> six dropdown menu: day, month, year, hours, minuthes, seconds. Note that the corresponding database field type must be datetime</li>
    <li><b>select_single:</b> a customizable menu, see below the parameters Option to include, Primary key field, Primary key table, Linked fields to specify the menu items</li>
    <li><b>generic_file:</b> an input field which allows the user to browse in his file system and upload a file. You need to specify the allowed file extensions in config.php. Note that the corresponding database field type must be varchar.</li>
    <li><b>image_file:</b> the same as the above, but in this case DaDaBIK supposes that the file is an image and shows it when the record is displayed. You need to specify the allowed file extensions in config.php. Note that the corresponding database field type must be varchar</li>
    <li><b>ID_user:</b> the username of the current user will be automatically inserted into this field when you insert a new record; an ID_user field must be excluded from the insert form, see below (Field present in the insert form?). Note that the corresponding database field type must be varchar.</li>
    <li><b>unique_ID:</b> a unique ID generated by using the PHP function unique_ID() in conjunction with microtime(), getmypid() and md5() will be automatically inserted in this field when you insert a new record into your table; a unique_ID field must be excluded from the insert form, see below (Field present in the insert form?). Note that the corresponding database field type must be varchar. Probably you will never use this field type, it can be useful just in very special cases.</li></ul>";
    
$int_fields_ar[$ar_index][8] = "hide_show_interface_configurator_fields(this);";
$int_fields_ar[$ar_index][9] = 'e1';



$ar_index++;
$int_fields_ar[$ar_index][0] = "Content type:";
$int_fields_ar[$ar_index][1] = "content_field";
$int_fields_ar[$ar_index][2] = "select_custom";
$int_fields_ar[$ar_index][3] = "alphabetic/alphanumeric/numeric/url/timestamp/email/html/phone";
$int_fields_ar[$ar_index][4] = "The content type determines the validation procedure DaDaBIK will perform during an insert/update and how a field value is displayed (formatting); select among:<ul>

    <li><b>alphabetic</b> Validation: only alphabetic characters allowed. Formatting: none.
    <li><b>alphanumeric:</b> Validation: all characters allowed. Formatting: none.
    <li><b>numeric:</b> Validation: only numeric characters allowed. Formatting: none.
    <li><b>url:</b> Validation: only URL with a correct syntax allowed. Formatting: field displayed as a URL link.
    <li><b>timestamp:</b> Validation: only integers allowed. Formatting: field displayed as date and time according to the <i>date_format</i> parameter in config.php
    <li><b>email:</b> Validation: only e-mail addresses with a correct syntax allowed. Formatting: field displayed as a mailto: link
    <li><b>html:</b> Validation: all characters allowed. Formatting: DaDaBIK doesn\'t perform a conversion from special characters to HTML entities with htmlspecialchars for the fields having this content type. For example, this content type can be used to enter a full custom URL in the standard HTML format or an HTML formatted text. THIS COULD LEAD TO SECURITY PROBLEMS. READ THE DOCUMENTATION BEFORE USING!
    <li><b>phone:</b> Validation: only phone numbers with a correct syntax (a + sign followed by numbers e.g. +39025689781) allowed. Formatting: none.
    </ul><br/>Note that, for select_single field type, the validation is not performed and, if the options are driven from another table, the content types set for the linked fields are used to derive the formatting.
";
$int_fields_ar[$ar_index][7] = 20;

// enterprise
// pro
$ar_index++;
$int_fields_ar[$ar_index][0] = "Custom validation function:";
$int_fields_ar[$ar_index][1] = "custom_validation_function_field";
$int_fields_ar[$ar_index][2] = "text";
$int_fields_ar[$ar_index][3] = "50";
$int_fields_ar[$ar_index][4] = "Specify here the <b>name</b> of the function to be used to validate this field\'s data. This function override the built-in validation functions executed according to the content type (if any).<br/><br/>The function name must start with <b>dadabik_</b> and you must write the function code in <b>/include/custom_functions.php</b>. The <b>/include/custom_functions.php</b> contains all the instructions to write it correctly.";

$ar_index++;
$int_fields_ar[$ar_index][0] = "Custom formatting function:";
$int_fields_ar[$ar_index][1] = "custom_formatting_function_field";
$int_fields_ar[$ar_index][2] = "text";
$int_fields_ar[$ar_index][3] = "50";
$int_fields_ar[$ar_index][4] = "Specify here the <b>name</b> of the function (if any) to be used to format this field\'s data in the datagrid view and details view. This function override the built-in formatting functions executed according to the content type (if any).<br/><br/>The function name must start with <b>dadabik_</b> and you must write the function code in <b>/include/custom_functions.php</b>. The <b>/include/custom_functions.php</b> contains all the instructions to write it correctly.";


$ar_index++;
$int_fields_ar[$ar_index][0] = "Custom CSV formatting function:";
$int_fields_ar[$ar_index][1] = "custom_csv_formatting_function_field";
$int_fields_ar[$ar_index][2] = "text";
$int_fields_ar[$ar_index][3] = "50";
$int_fields_ar[$ar_index][4] = "Specify here the <b>name</b> of the function (if any) to be used to format this field\'s data in the CSV view. This function override the built-in formatting functions executed according to the content type (if any).<br/><br/>The function name must start with <b>dadabik_</b> and you must write the function code in <b>/include/custom_functions.php</b>. The <b>/include/custom_functions.php</b> contains all the instructions to write it correctly.";
// end enterprise
// end pro

$ar_index++;
$int_fields_ar[$ar_index][0] = "Hard-coded list of the options:";
$int_fields_ar[$ar_index][1] = "select_options_field";
$int_fields_ar[$ar_index][2] = "text";
$int_fields_ar[$ar_index][3] = "50";
$int_fields_ar[$ar_index][4] = "Specify the possible options for a select_single field e.g. ~teacher~manager~student~<br/>If the options must be driven from another table, you should instead fill the <i>Primary key field</i>, <i>Primary key table</i>, <i>Linked fields</i> and (optionally) <i>Order by</i>, <i>Order type</i> and <i>Where clause</i> parameters; in this case the hard-coded options specified here are not taken into consideration.";
$int_fields_ar[$ar_index][5] = "Field type specific parameters";
$int_fields_ar[$ar_index][6] = array();
$int_fields_ar[$ar_index][6][] = 1;
$int_fields_ar[$ar_index][7] = 1;


$ar_index++;
$int_fields_ar[$ar_index][0] = "Primary key field";
$int_fields_ar[$ar_index][1] = "primary_key_field_field";
$int_fields_ar[$ar_index][2] = "text";
$int_fields_ar[$ar_index][3] = "50";
$int_fields_ar[$ar_index][4] = "if a field is a select_single and the options must be driven from another table (so the field can be considered foreign key for DaDaBIK, regardless of a real dbms foreign key declaration), specify here the primary key of that table.";
$int_fields_ar[$ar_index][6] = array();
$int_fields_ar[$ar_index][6][] = 1;
$int_fields_ar[$ar_index][7] = 2;

$ar_index++;
$int_fields_ar[$ar_index][0] = "Primary key table";
$int_fields_ar[$ar_index][1] = "primary_key_table_field";
$int_fields_ar[$ar_index][2] = "text";
$int_fields_ar[$ar_index][3] = "50";
$int_fields_ar[$ar_index][4] = "if a field is a select_single and the options must be driven from another table, specify here the name of that table.";
$int_fields_ar[$ar_index][6] = array();
$int_fields_ar[$ar_index][6][] = 1;
$int_fields_ar[$ar_index][7] = 3;

$ar_index++;
$int_fields_ar[$ar_index][0] = "Linked fields";
$int_fields_ar[$ar_index][1] = "linked_fields_field";
$int_fields_ar[$ar_index][2] = "text";
$int_fields_ar[$ar_index][3] = "50";
$int_fields_ar[$ar_index][4] = " The fields in the primary key table you want to display. Imagine you have a table <i>albums_tab</i> that contains information about CDs. In this table you have a field <i>ID_author</i> that &quot;links&quot; the table <i>authors_tab</i>. If you want to display, for each record, <i>first_name_author</i> and <i>last_name_author</i> of <i>authors_tab</i>, you have to use <i>ID_author</i> as primary key field, <i>authors_tab</i> as primary key table, <i>first_name_author</i>~<i>last_name_author</i> as linked fields.";
$int_fields_ar[$ar_index][6] = array();
$int_fields_ar[$ar_index][6][] = 1;
$int_fields_ar[$ar_index][7] = 4;

$ar_index++;
$int_fields_ar[$ar_index][0] = "Order by";
$int_fields_ar[$ar_index][1] = "linked_fields_order_by_field";
$int_fields_ar[$ar_index][2] = "text";
$int_fields_ar[$ar_index][3] = "50";
$int_fields_ar[$ar_index][4] = "The linked field by which you want to order the items in the menu created by a select_single field.";
$int_fields_ar[$ar_index][6] = array();
$int_fields_ar[$ar_index][6][] = 1;
$int_fields_ar[$ar_index][7] = 5;

$ar_index++;
$int_fields_ar[$ar_index][0] = "Order type";
$int_fields_ar[$ar_index][1] = "linked_fields_order_type_field";
$int_fields_ar[$ar_index][2] = "text";
$int_fields_ar[$ar_index][3] = "50";
$int_fields_ar[$ar_index][4] = "The order type (ASC or DESC, if you leave blank ASC is the default) to be used on the &quot;Order by&quot; field.";
$int_fields_ar[$ar_index][6] = array();
$int_fields_ar[$ar_index][6][] = 1;
$int_fields_ar[$ar_index][7] = 6;

$ar_index++;
$int_fields_ar[$ar_index][0] = "Where clause ";
$int_fields_ar[$ar_index][1] = "where_clause_field";
$int_fields_ar[$ar_index][2] = "text";
$int_fields_ar[$ar_index][3] = "50";
$int_fields_ar[$ar_index][4] = "if a field is a select_single and the options must be driven from other tables, you can specify here a where clause to use in the query, eg. <b>id_customer > 10</b>";
$int_fields_ar[$ar_index][6] = array();
$int_fields_ar[$ar_index][6][] = 1;
$int_fields_ar[$ar_index][7] = 7;



$ar_index++;
$int_fields_ar[$ar_index][0] = "Other choices allowed?";
$int_fields_ar[$ar_index][1] = "other_choices_field";
$int_fields_ar[$ar_index][2] = "select_yn";
$int_fields_ar[$ar_index][4] = "Choose if the field, a select_single one, can accept also values other than the pre-set options during an insert/update.<br><br>If the user add a different value, it will be included in the list of pre-set options. Note that, if the field is a foreign key (see Primary key field for a definition), the <i>other</i> value is used to insert a new record in the primary key table  <b>EVEN IF THE CURRENT USER HAS NOT INSERT PERMISSIONS ON THE PRIMARY KEY TABLE</b>.<br><br>The use of this option together with a foreign key field makes sense only if there is just one linked field and requires that <i>Primary key table</i> has a primary key <b>auto-increment</b> field.";
$int_fields_ar[$ar_index][7] = 9;






$ar_index++;
$int_fields_ar[$ar_index][0] = "Prefix:";
$int_fields_ar[$ar_index][1] = "prefix_field";
$int_fields_ar[$ar_index][2] = "text";
$int_fields_ar[$ar_index][3] = "50";
$int_fields_ar[$ar_index][4] = "for text, textarea and rich_editor fields you can choose a prefix default value for your field, e.g. &quot;http://&quot; if your field need to be filled with a Web url; the prefix will be displayed directly in the insert form, but if the user doesn\'t fill-in the field it will be considered as blank.";
$int_fields_ar[$ar_index][6] = array();
$int_fields_ar[$ar_index][6][] = 2;
$int_fields_ar[$ar_index][7] = 10;

$ar_index++;
$int_fields_ar[$ar_index][0] = "Default value:";
$int_fields_ar[$ar_index][1] = "default_value_field";
$int_fields_ar[$ar_index][2] = "text";
$int_fields_ar[$ar_index][3] = "50";
$int_fields_ar[$ar_index][4] = "For text, textarea and rich_editor fields you can choose a default value for your field; the value will be displayed directly in the insert form. You can also set a default value if the corresponding field is set not to be present in the insert form.<br/><br/>Furthermore, you can specify a default value through an SQL SELECT query; in this case the default value must start with SQL:SELECT (uppercase), for example SQL:SELECT MAX(id_customer) FROM customers; when you use a SQL: default value, instead of taking a static default value, the query is executed and the first selected field of the first row returned is used as default value. Don\'t add a semicolumn at the end of the query.";

$int_fields_ar[$ar_index][6] = array();
$int_fields_ar[$ar_index][6][] = 2;
$int_fields_ar[$ar_index][7] = 11;

$ar_index++;
$int_fields_ar[$ar_index][0] = "Width (chars):";
$int_fields_ar[$ar_index][1] = "width_field";
$int_fields_ar[$ar_index][2] = "text";
$int_fields_ar[$ar_index][3] = "2";
$int_fields_ar[$ar_index][4] = "The width of an input box, used with text, password, textarea and rich_editor boxes.";
$int_fields_ar[$ar_index][6] = array();
$int_fields_ar[$ar_index][6][] = 2;
$int_fields_ar[$ar_index][7] = 12;

$ar_index++;
$int_fields_ar[$ar_index][0] = "Height (chars):";
$int_fields_ar[$ar_index][1] = "height_field";
$int_fields_ar[$ar_index][2] = "text";
$int_fields_ar[$ar_index][3] = "2";
$int_fields_ar[$ar_index][4] = "The height of an input box, used with textarea and rich_editor boxes.";
$int_fields_ar[$ar_index][7] = 13;

$ar_index++;
$int_fields_ar[$ar_index][0] = "Maxlength:";
$int_fields_ar[$ar_index][1] = "maxlength_field";
$int_fields_ar[$ar_index][2] = "text";
$int_fields_ar[$ar_index][3] = "4";
$int_fields_ar[$ar_index][4] = "The maximum number of characters allowed in the input box, used with text, password, textarea, rich_editor boxes and select_single (just for the &quot;other&quot; option).";
$int_fields_ar[$ar_index][7] = 14;

$ar_index++;
$int_fields_ar[$ar_index][0] = "Hint:";
$int_fields_ar[$ar_index][1] = "hint_insert_field";
$int_fields_ar[$ar_index][2] = "text";
$int_fields_ar[$ar_index][3] = "50";
$int_fields_ar[$ar_index][4] = "The text of a hint for the user that will appear during the insert/update procedure near the input field.";
$int_fields_ar[$ar_index][7] = 15;

$ar_index++;
$int_fields_ar[$ar_index][0] = "Tooltip:";
$int_fields_ar[$ar_index][1] = "tooltip_field";
$int_fields_ar[$ar_index][2] = "text";
$int_fields_ar[$ar_index][3] = "50";
$int_fields_ar[$ar_index][4] = "A tooltip which appears close to text, textarea and file fields when the mouse pointer is hover the field. Please note that it does not work with Internet Explorer.";
$int_fields_ar[$ar_index][7] = 16;


$ar_index++;
$int_fields_ar[$ar_index][0] = "Field present in the search form?";
$int_fields_ar[$ar_index][1] = "present_search_form_field";
$int_fields_ar[$ar_index][2] = "select_yn";
$int_fields_ar[$ar_index][4] = "No help available.";
$int_fields_ar[$ar_index][5] = "Forms presence";
$int_fields_ar[$ar_index][7] = 17;

$ar_index++;
$int_fields_ar[$ar_index][0] = "Field present in the results page?";
$int_fields_ar[$ar_index][1] = "present_results_search_field";
$int_fields_ar[$ar_index][2] = "select_yn";
$int_fields_ar[$ar_index][4] = "No help available.";

$ar_index++;
$int_fields_ar[$ar_index][0] = "Field present in the details page?";
$int_fields_ar[$ar_index][1] = "present_details_form_field";
$int_fields_ar[$ar_index][2] = "select_yn";
$int_fields_ar[$ar_index][4] = "No help available.";

$ar_index++;
$int_fields_ar[$ar_index][0] = "Field present in the insert form?";
$int_fields_ar[$ar_index][1] = "present_insert_form_field";
$int_fields_ar[$ar_index][2] = "select_yn";
$int_fields_ar[$ar_index][4] = "If the field is auto-increment you should choose N.";

$ar_index++;
$int_fields_ar[$ar_index][0] = "Field present in the edit form?";
$int_fields_ar[$ar_index][1] = "present_edit_form_field";
$int_fields_ar[$ar_index][2] = "select_yn";
$int_fields_ar[$ar_index][4] = "If the field is auto-increment you should choose N.";


$ar_index++;
$int_fields_ar[$ar_index][0] = "Field present in the quick search row?";
$int_fields_ar[$ar_index][1] = "present_filter_form_field";
$int_fields_ar[$ar_index][2] = "select_yn";
$int_fields_ar[$ar_index][4] = "No help available";

$ar_index++;
$int_fields_ar[$ar_index][0] = "Is the field a required one?";
$int_fields_ar[$ar_index][1] = "required_field";
$int_fields_ar[$ar_index][2] = "select_yn";
$int_fields_ar[$ar_index][4] = "Choose if the field should be required during insert and update procedures.";
$int_fields_ar[$ar_index][5] = "Insert, Update, Search parameters";

$ar_index++;
$int_fields_ar[$ar_index][0] = "Check for duplicated entries during INSERT?";
$int_fields_ar[$ar_index][1] = "check_duplicated_insert_field";
$int_fields_ar[$ar_index][2] = "select_yn";
$int_fields_ar[$ar_index][4] = "Choose if the field value should be checked for possible duplication during the insert procedure.";

$ar_index++;
$int_fields_ar[$ar_index][0] = "Search operators:";
$int_fields_ar[$ar_index][1] = "select_type_field";
$int_fields_ar[$ar_index][2] = "text";
$int_fields_ar[$ar_index][3] = "50";
$int_fields_ar[$ar_index][4] = "Specify is_equal, is_different, contains, starts_with, ends_with, greater_than, less_than, is_null, is_not_null, is_empty, is_not_empty or a group of these operators separated by &quot;/&quot;. E.g. if you specify just &quot;contains&quot; DaDaBIK will always use the contains operator for this field during the search; if you use &quot;exactly/contains&quot; DaDaBIK will create for this field a listbox with the operators exactly/like, the user can then choose the preferred one during each search operation.<br/>Please note that you must use operators compatible with your field type, otherwise users get unhandled errors during search operations. Here is a list of incompatibility:<br/>1) <i>select_single</i> fields are compatible just with <i>is_null</i>, <i>is_not_null</i>, <i>is_empty</i>, <i>is_not_empty</i>, <i>is_equals</i> and <i>is_different</i><br/>2) <i>date, date_time, insert_date and update_date fields</i> are compatible just with <i>is_null</i>, <i>is_not_null</i>, <i>greater_than</i>, <i>less_than</i>, <i>is_equals</i> and <i>is_different</i>.";

$ar_index++;
$int_fields_ar[$ar_index][0] = "Linked items table names:";
$int_fields_ar[$ar_index][1] = "items_table_names_field";
$int_fields_ar[$ar_index][2] = "text";
$int_fields_ar[$ar_index][3] = "50";
$int_fields_ar[$ar_index][4] = "You should fill this property only for the primary key of a table, when you want to enable a master/details view.<br><br>For example imagine you have an albums (id_album, title_album) table and a songs (id_song, id_album, title_song) table; if you want to display, in the album detail view, also the list of the linked songs, you have to put <i>songs</i> in <i>Linked items table names</i> and <i>id_album</i> in <i>Items table foreign key field names</i> (see below). Each table can have more than one linked table; in this case you can add additional table and foreign key field names using the separator.";
$int_fields_ar[$ar_index][5] = "Master/details view";

$ar_index++;
$int_fields_ar[$ar_index][0] = "Items table foreign key field names:";
$int_fields_ar[$ar_index][1] = "items_table_fk_field_names_field";
$int_fields_ar[$ar_index][2] = "text";
$int_fields_ar[$ar_index][3] = "50";
$int_fields_ar[$ar_index][4] = "You should fill this property only for the primary key of a table, when you want to enable a master/details view.<br><br>For example imagine you have an albums (id_album, title_album) table and a songs (id_song, id_album, title_song) table; if you want to display, in the album detail view, also the list of the linked songs, you have to put <i>songs</i> in <i>Linked items table names</i> (see above) and <i>id_album </i>in <i>Items table foreign key field names</i>. Each table can have more than one linked table; in this case you can add additional table and foreign key field names using the separator. It is also important to highlight that, in this example, <i>id_album</i> in <i>songs</i> should be a select_single field with values driven from albums (see field type for information about select_single fields).";



$ar_index++;
$int_fields_ar[$ar_index][0] = "New line after this field (insert form)?";
$int_fields_ar[$ar_index][1] = "insert_new_line_after_field";
$int_fields_ar[$ar_index][2] = "select_yn";
$int_fields_ar[$ar_index][4] = "In the insert form, do you want the next field after this on a new line?";
$int_fields_ar[$ar_index][5] = "Form layout";

$ar_index++;
$int_fields_ar[$ar_index][0] = "New line after this field (search form)?";
$int_fields_ar[$ar_index][1] = "search_new_line_after_field";
$int_fields_ar[$ar_index][2] = "select_yn";
$int_fields_ar[$ar_index][4] = "In the search form, do you want the next field after this on a new line?";

$ar_index++;
$int_fields_ar[$ar_index][0] = "New line after this field (details page)?";
$int_fields_ar[$ar_index][1] = "details_new_line_after_field";
$int_fields_ar[$ar_index][2] = "select_yn";
$int_fields_ar[$ar_index][4] = "In the details page, do you want the next field after this on a new line?";

$ar_index++;
$int_fields_ar[$ar_index][0] = "New line after this field (edit form)?";
$int_fields_ar[$ar_index][1] = "edit_new_line_after_field";
$int_fields_ar[$ar_index][2] = "select_yn";
$int_fields_ar[$ar_index][4] = "In the edit form, do you want the next field after this on a new line?";



$ar_index++;
$int_fields_ar[$ar_index][0] = "Separator before this field (insert form):";
$int_fields_ar[$ar_index][1] = "insert_separator_before_field";
$int_fields_ar[$ar_index][2] = "text";
$int_fields_ar[$ar_index][3] = "50";
$int_fields_ar[$ar_index][4] = "In the insert form, do you want a titled separator before this field? If yes, type the title here";

$ar_index++;
$int_fields_ar[$ar_index][0] = "Separator before this field (search form):";
$int_fields_ar[$ar_index][1] = "search_separator_before_field";
$int_fields_ar[$ar_index][2] = "text";
$int_fields_ar[$ar_index][3] = "50";
$int_fields_ar[$ar_index][4] = "In the search form, do you want a titled separator before this field? If yes, type the title here";

$ar_index++;
$int_fields_ar[$ar_index][0] = "Separator before this field (details page):";
$int_fields_ar[$ar_index][1] = "details_separator_before_field";
$int_fields_ar[$ar_index][2] = "text";
$int_fields_ar[$ar_index][3] = "50";
$int_fields_ar[$ar_index][4] = "In the details page, do you want a titled separator before this field? If yes, type the title here";

$ar_index++;
$int_fields_ar[$ar_index][0] = "Separator before this field (edit form):";
$int_fields_ar[$ar_index][1] = "edit_separator_before_field";
$int_fields_ar[$ar_index][2] = "text";
$int_fields_ar[$ar_index][3] = "50";
$int_fields_ar[$ar_index][4] = "In the edit form, do you want a titled separator before this field? If yes, type the title here";


$ar_index++;
$int_fields_ar[$ar_index][0] = "Separator char for options, linked fields and master/details:";
$int_fields_ar[$ar_index][1] = "separator_field";
$int_fields_ar[$ar_index][2] = "text";
$int_fields_ar[$ar_index][3] = "2";
$int_fields_ar[$ar_index][4] = "This is the separator characther used here to separate values in the <i>Option to include</i>, <i>Linked fields</i>, <i>Linked items table names</i> and <i>Items table foreign key field names</i> parameters. In most of the case you can safely leave (and use) the default one, ~";
$int_fields_ar[$ar_index][6] = array();
$int_fields_ar[$ar_index][6][] = 1;
$int_fields_ar[$ar_index][5] = 'Other';

?>
